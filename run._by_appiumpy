#!/usr/bin/env python3

'''
@Description: 通过appium实现自动化
@Version: 1.0
@Autor: lhgcs
@Date: 2020-06-05 22:42:25
@LastEditors: lhgcs
@LastEditTime: 2020-06-05 22:44:53
@FilePath: /App-Autorun/run.py
'''

import sys
import random
from time import sleep

from appium import webdriver
from appium.webdriver.extensions.android.nativekey import AndroidKey

# 发送信息
sendText = ["good", "666666", "666666"]

desired_caps = {
    'platformName': 'Android',                # 被测手机是安卓
    # 'platformVersion': '8',                   # 手机安卓版本
    # 'deviceName': 'xxx',                      # 设备名，安卓手机可以随意填写
    'platformVersion': '5.1.1',               # 模拟器安卓版本
    'deviceName':'127.0.0.1:62001',           # 模拟器
    'appPackage': 'com.ss.android.ugc.aweme', # 启动APP Package名称
    'appActivity': '.main.MainActivity',      # 启动Activity名称
    'unicodeKeyboard': False,                 # 使用自带输入法，输入中文时填True
    'resetKeyboard': True,                    # 执行完程序恢复原来输入法
    'noReset': True,                          # 不要重置App
    'newCommandTimeout': 6000,
    'automationName' : 'UiAutomator2'
}

# 连接Appium Server，初始化自动化环境，server的地址
driver = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps)
# 设置缺省等待时间
driver.implicitly_wait(5)

'''
@description: 通过id查找元素
@param {type} 
@return: 
'''
def find_ele_by_id(drivers,id, cnt):
    i = 0
    temp = []
    while len(temp) <= 0 and i<cnt:
        temp = drivers.find_elements_by_id(id)
        print("temp=", temp, flush=True)
        if len(temp) > 0:
            return temp
        else:
            i +=1
            sleep(3)
    return None

'''
@description: 通过标签查找元素
@param {type} 
@return: 
'''
def find_ele_by_className(drivers,className, cnt):
    i = 0
    temp = []
    while len(temp) <= 0 and i<cnt:
        temp = drivers.find_elements_by_class_name(className)
        print("temp=", temp, flush=True)
        if len(temp) > 0:
            return temp
        else:
            i +=1
            sleep(3)
    return None

'''
@description: 向上滑
@param {type} 
@return: 
'''
def swip_up(drivers):
    # 获取屏幕的size
    size = driver.get_window_size()
    print(size)
    width = size['width']
    height = size['height']
    drivers.swipe(width/2, height*0.75, width/2, height*0.25)


if __name__ == "__main__":
    try:
        print("start")

        # id前缀
        packageName = "com.ss.android.ugc.aweme:id/"
        # 延迟等待，否则网络加载慢，导致页面元素没出来
        delay_sec = 3

        # 评论
        # android.widget.ImageView
        # com.ss.android.ugc.aweme:id/aab
        # [941,1138][1051,1248]

        # 首页
        # android.widget.TextView
        # com.ss.android.ugc.aweme:id/feq
        # [67,1811][149,1867]

        # 输入
        # android.widget.EditText
        # com.ss.android.ugc.aweme:id/aa7
        # [44,806][728,916]

        # 发送
        # android.widget.ImageView
        # com.ss.android.ugc.aweme:id/aap
        # [948,806][1058,916]

        while True:
            # 打开评论
            res = find_ele_by_id(driver,packageName + "aab", 10)
            if res is not None:
                res[0].click()
                print("点击评论", flush=True)
            else:
                continue

            sleep(delay_sec)

            # 打开输入框
            res = find_ele_by_className(driver,"android.widget.EditText", 10)
            if res is not None:
                res[0].click()
                print("点击输入框", flush=True)
            else:
                continue

            sleep(delay_sec)

            # 输入字符串
            # res = find_ele_by_id(driver,packageName + "aa7", 30)
            res = find_ele_by_className(driver,"android.widget.EditText", 10)
            if res is not None:
                # 随机选择内容发送
                res[0].send_keys(sendText[random.randrange(0, len(sendText))])
                print("输入字符串", flush=True)
            else:
                continue

            sleep(delay_sec)

            # 发送
            res = find_ele_by_id(driver,packageName + "aap", 3)
            if res is not None:
                res[0].click()
                print("点击发送", flush=True)
            else:
                continue

            sleep(delay_sec)

            # 关闭
            res = find_ele_by_id(driver,packageName + "kr", 3)
            if res is not None:
                res[0].click()
                print("点击退出", flush=True)
            else:
                continue

            sleep(delay_sec)

            # 上滑
            swip_up(driver)
            print("向上滑动", flush=True)

            sleep(delay_sec)

        # 点击
        # driver.tap([(x,y)])
        # 回车
        # driver.press_keycode(AndroidKey.ENTER)

    except Exception as e:
        print(e)

    # 退出
    driver.quit()
